import sqlite3

# Устанавливаем соединение с базой данных или создаем новую, если она не существует
conn = sqlite3.connect('car_catalog.db')

# Создаем курсор для выполнения SQL-запросов
cur = conn.cursor()

# Создаем таблицу "Марки и модели"
cur.execute('''CREATE TABLE IF NOT EXISTS Марки_и_модели (
               ID INTEGER PRIMARY KEY,
               Марка TEXT,
               Модель TEXT)''')

# Создаем таблицу "Характеристики автомобилей"
cur.execute('''CREATE TABLE IF NOT EXISTS Характеристики_автомобилей (
               ID INTEGER PRIMARY KEY,
               ID_марки_и_модели INTEGER,
               Год_выпуска INTEGER,
               Цвет TEXT,
               Тип_кузова TEXT,
               Тип_двигателя TEXT,
               Мощность_двигателя REAL,
               Пробег REAL,
               Цена REAL,
               Тип_коробки_передач TEXT,
               FOREIGN KEY (ID_марки_и_модели) REFERENCES Марки_и_модели(ID))''')

# Создаем таблицу "Дополнительные опции и особенности"
cur.execute('''CREATE TABLE IF NOT EXISTS Дополнительные_опции_и_особенности (
               ID INTEGER PRIMARY KEY,
               ID_автомобиля INTEGER,
               Опция_или_особенность TEXT,
               FOREIGN KEY (ID_автомобиля) REFERENCES Характеристики_автомобилей(ID))''')

# Подтверждаем выполнение изменений в базе данных
conn.commit()

# Закрываем соединение с базой данных
conn.close()

# Список данных для таблицы "Марки и модели"
marques_modeles_data = [
    ("Toyota", "Camry"),
    ("BMW", "3 Series"),
    ("Mercedes", "E-Class"),
    ("Honda", "Civic"),
    ("Ford", "Mustang"),
    ("Audi", "A4"),
    ("Volkswagen", "Golf"),
    ("Nissan", "Altima"),
    ("Chevrolet", "Silverado"),
    ("Hyundai", "Sonata")
]

# Список данных для таблицы "Характеристики автомобилей"
car_characteristics_data = [
    (1, 2018, "Синий", "Седан", "Бензин", 178, 45000, 20000, "Автоматическая"),
    (2, 2020, "Черный", "Седан", "Дизель", 190, 25000, 35000, "Автоматическая"),
    (3, 2019, "Серебристый", "Седан", "Бензин", 200, 30000, 40000, "Автоматическая"),
    (4, 2017, "Красный", "Седан", "Бензин", 158, 55000, 15000, "Механическая"),
    (5, 2016, "Жёлтый", "Купе", "Бензин", 310, 20000, 30000, "Механическая"),
    (6, 2018, "Белый", "Седан", "Бензин", 190, 40000, 25000, "Автоматическая"),
    (7, 2019, "Зелёный", "Хэтчбек", "Гибрид", 150, 35000, 28000, "Автоматическая"),
    (8, 2021, "Синий", "Седан", "Электричество", 200, 1000, 45000, "Автоматическая"),
    (9, 2015, "Черный", "Пикап", "Бензин", 355, 60000, 20000, "Автоматическая"),
    (10, 2020, "Серый", "Седан", "Бензин", 180, 15000, 30000, "Механическая"),
    (1, 2016, "Серебристый", "Внедорожник", "Бензин", 250, 30000, 35000, "Автоматическая"),
    (2, 2019, "Красный", "Кабриолет", "Бензин", 320, 10000, 60000, "Автоматическая"),
    (3, 2018, "Белый", "Внедорожник", "Дизель", 220, 40000, 45000, "Автоматическая"),
    (4, 2020, "Черный", "Хэтчбек", "Бензин", 170, 20000, 25000, "Механическая"),
    (5, 2017, "Синий", "Внедорожник", "Бензин", 280, 50000, 40000, "Автоматическая")
]

# Список данных для таблицы "Дополнительные опции и особенности"
additional_options_data = [
    (1, "Кожаные сиденья"),
    (1, "Люк"),
    (2, "Навигационная система"),
    (2, "Подогреваемые сиденья"),
    (3, "Система помощи при парковке"),
    (4, "Легкосплавные диски"),
    (4, "Камера заднего вида"),
    (5, "Спортивный пакет"),
    (5, "Превосходная аудиосистема"),
    (6, "Система предупреждения о выходе из полосы"),
    (7, "Бесключевой доступ"),
    (8, "Адаптивный круиз-контроль"),
    (9, "Тяговый пакет"),
    (10, "Панорамный люк"),
    (10, "Мониторинг слепых зон")
]


# Функция для заполнения таблиц
def fill_tables():
    conn = sqlite3.connect('car_catalog.db')
    cur = conn.cursor()

    # Заполнение таблицы "Марки и модели"
    cur.executemany("INSERT INTO Марки_и_модели (Марка, Модель) VALUES (?, ?)", marques_modeles_data)

    # Заполнение таблицы "Характеристики автомобилей"
    cur.executemany(
        "INSERT INTO Характеристики_автомобилей (ID_марки_и_модели, Год_выпуска, Цвет, Тип_кузова, Тип_двигателя,"
        " Мощность_двигателя, Пробег, Цена, Тип_коробки_передач) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
        car_characteristics_data)

    # Заполнение таблицы "Дополнительные опции и особенности"
    cur.executemany(
        "INSERT INTO Дополнительные_опции_и_особенности (ID_автомобиля, Опция_или_особенность) VALUES (?, ?)",
        additional_options_data)

    conn.commit()
    conn.close()


# Вызов функции для заполнения таблиц
fill_tables()
